// Generated by CoffeeScript 1.3.3
(function() {
  var $, bindBusFields, displayOnPageNotification, fadeInCanvas, loadBus, ls, pageFlipCursorBlinking, resizeBackgroundImage, saveBus, testDesktopNotification, toggleInfoscreen, updateOfficeStatus;

  $ = jQuery;

  ls = localStorage;

  resizeBackgroundImage = function() {
    if (1550 < $(window).width()) {
      return $('#background').attr("style", "background:url('img/background-large.png') center center no-repeat;");
    } else if (1200 < $(window).height()) {
      return $('#background').attr("style", "background:url('img/background-large-vertical.png') center center no-repeat;");
    } else {
      return $('#background').attr("style", "background:url('img/background-medium.png') center center no-repeat;");
    }
  };

  displayOnPageNotification = function() {
    $("#notification").fadeIn(200);
    return setTimeout((function() {
      return $("#notification").fadeOut(200);
    }), 800);
  };

  pageFlipCursorBlinking = function() {
    return $(".pageflipcursor").animate({
      opacity: 0
    }, "fast", "swing", function() {
      return $(this).animate({
        opacity: 1
      }, "fast", "swing");
    });
  };

  updateOfficeStatus = function() {
    return Office.get(function(status, title, message) {
      chrome.browserAction.setIcon({
        path: 'img/icon-' + status + '.png'
      });
      ls.currentStatus = status;
      return Office.getTodaysEvents(function(meetingPlan) {
        var today;
        meetingPlan = $.trim(meetingPlan);
        today = '### Nå\n' + title + ": " + message + "\n\n### Resten av dagen\n" + meetingPlan;
        chrome.browserAction.setTitle({
          title: today
        });
        return ls.currentStatusMessage = message;
      });
    });
  };

  testDesktopNotification = function() {
    var notification;
    notification = webkitNotifications.createHTMLNotification('notification.html');
    return notification.show();
  };

  bindBusFields = function(busField) {
    var cssSelector, direction, stop;
    cssSelector = '#' + busField;
    if (DEBUG) {
      console.log('Binding bus fields for ' + cssSelector);
    }
    stop = $(cssSelector + ' .stop');
    direction = $(cssSelector + ' .direction');
    loadBus(busField);
    $(stop).focus(function() {
      if (DEBUG) {
        console.log('.stop focus');
      }
      $(stop).val('');
      return $('#bus_suggestions').html('');
    });
    $(stop).focusout(function() {
      var contents, correctStop, suggestions;
      if (DEBUG) {
        console.log('.stop blur');
      }
      contents = $(stop).val();
      suggestions = Bus.getPotentialStops(contents);
      if (suggestions.length === 1) {
        correctStop = suggestions[0];
        $(stop).val(correctStop);
        return $('#bus_suggestions').html('');
      } else {
        $(stop).val('');
        return $('#bus_suggestions').html('');
      }
    });
    $(stop).keyup(function() {
      var char, correctStop, directions, i, index, nameStart, suggestion, suggestions, _i, _len, _text;
      if (DEBUG) {
        console.log('.stop keyup');
      }
      nameStart = $(stop).val();
      if (nameStart.length > 0) {
        suggestions = Bus.getPotentialStops(nameStart);
        $('#bus_suggestions').html('');
        for (i in suggestions) {
          _text = suggestions[i];
          for (index = _i = 0, _len = nameStart.length; _i < _len; index = ++_i) {
            char = nameStart[index];
            _text = _text.replace(char, '<b>' + char + '</b>');
          }
          suggestion = $('<div class="suggestion">' + _text + '</div>').hide();
          $('#bus_suggestions').append(suggestion);
          $(suggestion).fadeIn();
        }
        if (suggestions.length === 1) {
          correctStop = suggestions[0];
          $(stop).val(correctStop);
          $(stop).blur();
          $('#bus_suggestions').html('');
          suggestion = $('<div class="correct">' + correctStop + '</div>').hide();
          $('#bus_suggestions').append(suggestion);
          $(suggestion).fadeIn();
          setTimeout((function() {
            $('#bus_suggestions .correct').fadeOut(200);
            return setTimeout((function() {
              return $('#bus_suggestions').html('');
            }), 300);
          }), 1200);
          directions = Bus.getDirections(correctStop);
          $(direction).html('');
          for (i in directions) {
            $(direction).append('<option>' + directions[i] + '</option>');
          }
          return saveBus(busField);
        }
      }
    });
    return $(direction).change(function() {
      if (DEBUG) {
        console.log('.direction change');
      }
      return saveBus(busField);
    });
  };

  saveBus = function(busField) {
    var busStopId, cssSelector, direction, stop;
    cssSelector = '#' + busField;
    stop = $(cssSelector + ' .stop').val();
    direction = $(cssSelector + ' .direction').val();
    busStopId = Bus.getStop(stop, direction);
    ls[busField] = busStopId;
    ls[busField + '_name'] = stop;
    ls[busField + '_direction'] = direction;
    displayOnPageNotification();
    if (DEBUG) {
      return console.log('http://api.visuweb.no/bybussen/1.0/Departure/Realtime/' + busStopId + '/f6975f3c1a3d838dc69724b9445b3466');
    }
  };

  loadBus = function(busField) {
    var cssSelector;
    cssSelector = '#' + busField;
    $(cssSelector + ' .stop').val(ls[busField + '_name']);
    return $(cssSelector + ' .direction').val(ls[busField + '_direction']);
  };

  toggleInfoscreen = function(activate) {
    var id;
    id = 'useInfoscreen';
    if (activate) {
      $('#' + id).attr('checked', false);
      $('#logo_subtext').fadeOut();
      return $('#infoscreen_slider').slideUp(400, function() {
        return $('#infoscreen_preview').fadeIn(400, function() {
          $('#logo_subtext').html('infoscreen&nbsp;&nbsp;&nbsp;&nbsp;');
          return $('#logo_subtext').fadeIn(function() {
            if (confirm('Sikker på at du vil skru på Online Infoscreen?\n\n- Krever full-HD skjerm som står på høykant\n- Popup-knappen åpner Infoskjerm i stedet\n- Infoskjermen åpnes hver gang Chrome starter\n- Infoskjerm åpnes nå!')) {
              ls[id] = 'true';
              $('#' + id).attr('checked', true);
              chrome.browserAction.setIcon({
                path: 'img/icon-default.png'
              });
              chrome.browserAction.setTitle({
                title: 'Online Infoscreen'
              });
              chrome.browserAction.setBadgeText({
                text: ''
              });
              return chrome.tabs.create({
                url: chrome.extension.getURL("infoscreen.html"),
                selected: false
              });
            } else {
              return setTimeout((function() {
                $('#logo_subtext').fadeOut();
                return $('#infoscreen_preview').fadeOut(200, function() {
                  return $('#infoscreen_slider').slideDown(400, function() {
                    $('#logo_subtext').html('notifier options');
                    return $('#logo_subtext').fadeIn();
                  });
                });
              }), 200);
            }
          });
        });
      });
    } else {
      ls[id] = 'false';
      updateOfficeStatus();
      $('#logo_subtext').fadeOut();
      return $('#infoscreen_preview').fadeOut(400, function() {
        return $('#infoscreen_slider').slideDown(400, function() {
          $('#logo_subtext').html('notifier options');
          return $('#logo_subtext').fadeIn();
        });
      });
    }
  };

  fadeInCanvas = function() {
    webGLStart();
    return $('#LessonCanvas').animate({
      opacity: 1
    }, 1300, 'swing', function() {
      return setTimeout((function() {
        return $('#LessonCanvas').animate({
          opacity: 0
        }, 1300, 'swing');
      }), 200);
    });
  };

  $(function() {
    if (DEBUG) {
      less.watch();
    }
    $('input:checkbox').each(function(index, element) {
      return element.checked = ls[element.id] === "true";
    });
    if (ls.useInfoscreen === 'true') {
      $('#logo_subtext').html('infoscreen&nbsp;&nbsp;&nbsp;&nbsp;');
      $('#infoscreen_slider').hide();
      $('#infoscreen_preview').show();
    }
    $(window).bind("resize", resizeBackgroundImage);
    resizeBackgroundImage();
    if (OPERATING_SYSTEM === 'Windows') {
      $('#pagefliptext').attr("style", "bottom:9px;");
      $('#pagefliplink').attr("style", "bottom:9px;");
    }
    setInterval((function() {
      return pageFlipCursorBlinking();
    }), 600);
    setTimeout((function() {
      return $('#plusonebutton').fadeIn(150);
    }), 1100);
    $('#notification').click(function() {
      return fadeInCanvas();
    });
    bindBusFields('first_bus');
    bindBusFields('second_bus');
    return $('input:checkbox').click(function() {
      if (this.id === 'useInfoscreen') {
        return toggleInfoscreen(this.checked);
      } else {
        ls[this.id] = this.checked;
        if (this.id === 'showOffice' && this.checked === false) {
          chrome.browserAction.setIcon({
            path: 'img/icon-default.png'
          });
          chrome.browserAction.setTitle({
            title: EXTENSION_NAME
          });
        } else if (this.id === 'showOffice' && this.checked === true) {
          updateOfficeStatus();
        }
        if (this.id === 'showNotifications' && this.checked === true) {
          testDesktopNotification();
        }
        return displayOnPageNotification();
      }
    });
  });

}).call(this);
