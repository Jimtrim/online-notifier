// Generated by CoffeeScript 1.3.3
(function() {
  var $, buildCantinaMenuPost, chatterText, displayStories, fadeButtonText, findUpdatedPosts, optionsText,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  $ = jQuery;

  displayStories = function(xmlstring) {
    var $xml, hangaren, idsOfLastViewed, index, items, realfag, updatedList, value, xmldoc, _guid, _results, _text;
    xmldoc = $.parseXML(xmlstring);
    $xml = $(xmldoc);
    items = $xml.find("item");
    _guid = $(items[0]).find("guid");
    _text = $(_guid).text();
    localStorage.mostRecentRead = _text.split('/')[4];
    updatedList = findUpdatedPosts();
    idsOfLastViewed = [];
    items.each(function(index, element) {
      var item, post, _ref;
      post = parsePost(element);
      idsOfLastViewed.push(post.id);
      if (index < localStorage.unreadCount) {
        if (_ref = post.id, __indexOf.call(updatedList.indexOf, _ref) >= 0) {
          item = '<div class="post"><span class="unread">UPDATED</span><span class="date"> <b>::</b></span>';
        } else {
          item = '<div class="post"><span class="unread">NEW</span><span class="date"> <b>::</b></span>';
        }
      } else {
        item = '<div class="post"><span class="read"></span>';
      }
      item += '\
        <span class="creator">' + post.creator + '</span><span class="date"> <b>::</b> ' + post.date + '</span>\
        <a href="' + post.link + '">\
        <div class="item" onclick="openUrl(\'' + post.link + '\')">\
          <img id="' + post.id + '" src="' + post.image + '" width="107" />\
          <div class="textwrapper">\
            <span class="title">' + post.title + '</span><br />\
            <span class="description">' + post.description + '</span>\
          </div>\
        </div>\
        </a>\
      </div>';
      return $('#popup').append(item);
    });
    if (localStorage.showCantinaMenu === 'true') {
      if (localStorage.hangarenMenu !== 'undefined' && localStorage.realfagMenu !== 'undefined') {
        hangaren = buildCantinaMenuPost('hangaren', HANGAREN_URL, localStorage.hangarenMenu);
        realfag = buildCantinaMenuPost('realfag', REALFAG_URL, localStorage.realfagMenu);
        $('header').append('<div id="cantinamenus">' + hangaren + realfag + '</div>');
      } else {
        cantinaMenu_error(CANTINA_CONNECTION_ERROR);
      }
    }
    localStorage.lastViewedIdList = JSON.stringify(idsOfLastViewed);
    chrome.browserAction.setBadgeText({
      text: ''
    });
    localStorage.unreadCount = 0;
    _results = [];
    for (index in idsOfLastViewed) {
      value = idsOfLastViewed[index];
      _results.push(getImageUrlForId(value, function(id, image) {
        return $('#' + id).attr('src', image);
      }));
    }
    return _results;
  };

  buildCantinaMenuPost = function(title, link, menu) {
    var dinner, dinnerObjects, dinnerlist, post, price, _i, _len;
    dinnerObjects = JSON.parse(menu);
    dinnerlist = '<div id="dinnerbox">';
    if (typeof dinnerObjects === 'string') {
      dinnerlist += '<li class="dinnerlist"><a href="' + link + '">' + dinnerObjects + '</a></li>';
    } else {
      for (_i = 0, _len = dinnerObjects.length; _i < _len; _i++) {
        dinner = dinnerObjects[_i];
        if (dinner.price !== null) {
          price = dinner.price + ',- ';
        } else {
          price = '';
        }
        dinnerlist += '<li class="dinnerlist" id="' + dinner.index + '"><a href="' + link + '">' + price + dinner.text + '</a></li>';
      }
    }
    dinnerlist += '</div>';
    post = '<div id="' + title + '">\
      <span class="creator">' + title + '</span>\
      <span class="description">' + dinnerlist + '</span>\
    </div>';
    return post;
  };

  findUpdatedPosts = function() {
    var news, newsList, updatedList, viewed, viewedList, _i, _j, _len, _len1;
    if (localStorage.lastViewedIdList === void 0) {
      localStorage.lastViewedIdList = JSON.stringify([]);
      return [];
    } else if (localStorage.mostRecentIdList === void 0) {
      localStorage.mostRecentIdList = JSON.stringify([]);
      return [];
    } else {
      viewedList = JSON.parse(localStorage.lastViewedIdList);
      newsList = JSON.parse(localStorage.mostRecentIdList);
      updatedList = [];
      for (_i = 0, _len = viewedList.length; _i < _len; _i++) {
        viewed = viewedList[_i];
        for (_j = 0, _len1 = newsList.length; _j < _len1; _j++) {
          news = newsList[_j];
          if (viewedList[viewed] === newsList[news]) {
            updatedList.push(viewedList[viewed]);
          }
        }
      }
      return updatedList;
    }
  };

  optionsText = function(show) {
    return fadeButtonText(show, 'Innstillinger');
  };

  chatterText = function(show) {
    return fadeButtonText(show, '&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Bli med i samtalen');
  };

  fadeButtonText = function(show, msg) {
    var fadeInSpeed, fadeOutSpeed;
    fadeInSpeed = 150;
    fadeOutSpeed = 50;
    if (show) {
      $('#buttontext').html(msg);
      return $('#buttontext').fadeIn(fadeInSpeed);
    } else {
      $('#buttontext').fadeOut(fadeOutSpeed);
      return $('#buttontext').html('');
    }
  };

  $(function() {
    cantinaMenu_update();
    fetchFeed();
    displayStories(localStorage.lastResponseData);
    officeStatus_update();
    $('#logo').click(function() {
      chrome.tabs.create({
        url: EXTENSION_WEBSITE
      });
      return window.close();
    });
    $('.dinnerlist').click(function() {
      var _element, _id, _url;
      _id = $(this).attr('id');
      localStorage.chosenDinner = _id;
      _element = $(this).find('a');
      _url = _element.attr('href');
      chrome.tabs.create({
        url: _url
      });
      return window.close();
    });
    $('#options_button').mouseenter(function() {
      return optionsText(true);
    });
    $('#options_button').mouseleave(function() {
      return optionsText(false);
    });
    $('#chatter_button').mouseenter(function() {
      return chatterText(true);
    });
    return $('#chatter_button').mouseleave(function() {
      return chatterText(false);
    });
  });

}).call(this);
